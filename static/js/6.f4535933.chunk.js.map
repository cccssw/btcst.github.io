{"version":3,"sources":["src/components/Column.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/components/Heading.tsx","src/components/ErrorMessage.tsx","src/components/InfoBox.tsx","src/components/Meta.tsx","node_modules/moment/locale sync /^/.//.*$","src/components/Expandable.tsx","src/components/Selectable.tsx","src/components/TokenAmount.tsx","src/components/TokenLogo.tsx","src/components/TokenSymbol.tsx","src/constants/Fraction.ts","src/hooks/useSwapRouter.tsx","src/hooks/useSettlement.tsx","src/utils/fetch-utils.ts","src/hooks/useMyLimitOrdersState.tsx","src/screens/SHTHistoryScreen.tsx","src/components/ItemSeparator.tsx"],"names":["Column","props","View","style","width","marginTop","noTopMargin","Platform","OS","Spacing","large","normal","SocialIcon","darkMode","useContext","GlobalContext","useColors","background","textLight","light","iconColor","undefined","backgroundColor","borderWidth","borderColor","SocialIcons","onPressTwitter","useLinker","onPressGithub","onPressHome","onPressReddit","onPressDiscord","FlexView","justifyContent","type","onPress","name","raised","reverse","color","reverseColor","containerStyle","flags","us","require","uk","cn","kr","Flag","locale","history","useHistory","location","useLocation","TouchableHighlight","push","pathname","marginHorizontal","Image","source","height","WebFooter","padding","alignItems","Text","note","tiny","Constants","manifest","version","small","Heading","accent","marginBottom","disabled","medium","fontWeight","flex","fontSize","IS_DESKTOP","paddingBottom","text","buttonText","size","title","onPressButton","buttonStyle","paddingHorizontal","ErrorMessage","error","code","message","InfoBox","backgroundLight","borderDark","border","useStyles","Meta","textMedium","placeholder","url","suffix","label","textDecorationLine","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","keys","Object","resolve","module","exports","Expandable","t","useTranslation","useState","expanded","setExpanded","shouldExpand","onExpand","display","children","Selectable","overlay","hovered","activeOpacity","underlayColor","selected","TokenAmount","caption","formatBalance","amount","token","balance","decimals","TokenLogo","setError","ETH","replaceWETH","isWETH","uri","logoURI","borderRadius","onError","opacity","TokenSymbol","marginLeft","symbol","Fraction","numerator","denominator","this","sdk","ethers","BigNumber","from","toString","numeratorToken","denominatorToken","mul","pow","value","NAN","isEmptyValue","ZERO","parseBalance","BASE","isNaN","isZero","fraction","div","eq","gt","lt","maxFractions","str","endsWith","substring","length","constants","Zero","One","useSwapRouter","Percent","allowedSlippage","swap","useCallback","trade","signer","a","async","Router","getAddress","feeOnTransfer","recipient","ttl","params","swapCallParameters","router","getContract","ROUTER","estimateGas","methodName","args","gasLimit","functions","tx","logTransaction","arg","addLiquidity","fromToken","toToken","fromAmount","toAmount","deadline","Math","floor","Date","getTime","address","deduct","removeLiquidityETH","liquidity","amountETH","removeLiquidity","addLiquidityETH","calculateSwapFee","Order","maker","amountIn","amountOutMin","now","v","r","s","filledAmountIn","canceled","toNumber","SETTLEMENT","settlement","hashOfOrder","hash","signMessage","utils","arrayify","signature","splitSignature","sign","useSettlement","createOrder","kovanSigner","order","toArgs","orderBook","ORDER_BOOK","cancelOrder","slice","queryOrderFilledEvents","filter","filters","OrderFilled","queryFilter","calculateLimitOrderFee","calculateLimitOrderReturn","price","limitOrderFeeDeducted","sub","swapFeeDeducted","parse","pow10","findOrFetchToken","provider","tokens","find","toLowerCase","ALCHEMY_PROVIDER","send","meta","fetchTokenMeta","logo","erc20","Promise","all","field","callStatic","data","fetchMyLimitOrders","canceledHashes","numberOfHashesOfMaker","pages","i","page","hashesOfMaker","hashes","flat","HashZero","orderOfHash","filledAmountInOfHash","includes","myOrders","sort","compareOrders","o0","o1","status","compared","fetchMyCanceledLimitOrderHashes","numberOfCanceledHashesOfMaker","allCanceledHashes","useMyLimitOrdersState","EthersContext","lastTimeRefreshed","setLastTimeRefreshed","setMyOrders","selectedOrder","setSelectedOrder","loading","setLoading","cancellingOrder","setCancellingOrder","filledEvents","setFilledEvents","useAsyncEffect","orders","onCancelOrder","wait","MyLimitOrders","state","OrderSelect","onSelectOrder","OrderList","renderItem","item","key","Loading","FlatList","EmptyList","margin","textAlign","OrderItem","fromTokens","buy","minWidth","Token","green","red","colorDisabled","Field","OrderInfo","expiry","useMemo","diff","moment","isAfter","utc","format","FilledEvents","event","transactionHash","Controls","CancelButton","catch","Button","SHTHistoryScreen","Screen","Container","BackgroundImage","Content","Title"],"mappings":"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","file":"static/js/6.f4535933.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"http://twitter.com/BTCStandardHash\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/Standard-Hashrate-Group\", \"\", \"_blank\");\n    \n    const onPressHome = useLinker(\"https://www.1-b.tc\", \"\", \"_blank\");\n    const onPressReddit = useLinker(\"https://www.reddit.com/user/BTCStandardHashrate\", \"\", \"_blank\");\n\n    const onPressDiscord = useLinker(\"https://discord.com/channels/791170396316893255/791170396765945886\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <SocialIcon type=\"wordpress\" onPress={onPressHome} />\n            <SocialIcon type=\"twitch\" onPress={onPressReddit} />\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React from \"react\";\nimport { Image, TouchableHighlight, View } from \"react-native\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport Constants from \"expo-constants\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport useLinker from \"../../hooks/useLinker\";\nimport Column from \"../Column\";\nimport FlexView from \"../FlexView\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst flags = {\n    us: require(\"../../../assets/flags/us.png\"),\n    uk: require(\"../../../assets/flags/uk.png\"),\n    cn: require(\"../../../assets/flags/cn.png\"),\n    kr: require(\"../../../assets/flags/kr.png\")\n};\n\nconst WebFooter = () => {\n    const onPressAlchemy = useLinker(\n        \"https://dashboard.alchemyapi.io/signup\",\n        \"\",\n        \"_blank\"\n    );\n    return (\n        <Column noTopMargin={true}>\n            <View style={{ width: \"100%\", padding: Spacing.normal, alignItems: \"center\" }}>\n                <SocialIcons />\n                {/* <TouchableHighlight onPress={onPressAlchemy}>\n                    <Image\n                        source={require(\"../../../assets/alchemy.png\")}\n                        style={{ width: 188, height: 40, marginTop: Spacing.tiny }}\n                    />\n                </TouchableHighlight> */}\n                <Text note={true} style={{ marginTop: Spacing.tiny }}>\n                    Built with ❤️ by Standard Hashrate (v{Constants.manifest.version})\n                </Text>\n                <FlexView style={{ marginTop: Spacing.small }}>\n                    <Flag name={\"uk\"} locale={\"en\"} />\n                    <Flag name={\"cn\"} locale={\"zh\"} />\n                    {/* <Flag name={\"kr\"} locale={\"ko\"} /> */}\n                </FlexView>\n            </View>\n        </Column>\n    );\n};\n\nconst Flag = ({ name, locale }) => {\n    const history = useHistory();\n    const location = useLocation();\n    const onPress = () => {\n        history.push(location.pathname + \"?locale=\" + locale);\n    };\n    return (\n        <TouchableHighlight onPress={onPress} style={{ marginHorizontal: 4 }}>\n            <Image source={flags[name]} style={{ width: 30, height: 20 }} />\n        </TouchableHighlight>\n    );\n};\n\nexport default WebFooter;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n    style?: TextStyle;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={props.fontWeight || \"bold\"}\n                disabled={props.disabled}\n                style={[{ flex: 1, fontSize: IS_DESKTOP ? 24 : 18, paddingBottom: Spacing.tiny }, props.style]}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                    buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Text from \"./Text\";\n\nconst ErrorMessage = ({ error }: { error: MetamaskError }) => (\n    <View\n        style={{\n            borderColor: \"red\",\n            borderWidth: 1,\n            width: \"100%\",\n            padding: Spacing.tiny,\n            marginTop: Spacing.small\n        }}>\n        {error.code && (\n            <Text fontWeight={\"bold\"} style={{ color: \"red\", fontSize: 14 }}>\n                Error Code {error.code}\n            </Text>\n        )}\n        <Text note={true} style={{ color: \"red\", fontSize: 14 }}>\n            {error.message}\n        </Text>\n    </View>\n);\n\nexport default ErrorMessage;\n","import React, { PropsWithChildren, useContext } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst InfoBox = (props: PropsWithChildren<ViewProps>) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { backgroundLight, borderDark } = useColors();\n    const { border } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ color: darkMode ? borderDark : backgroundLight }),\n                    backgroundColor: backgroundLight,\n                    marginTop: Spacing.normal + Spacing.small,\n                    padding: Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\n\nexport default InfoBox;\n","import React, { FC } from \"react\";\n\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\nexport interface MetaProps {\n    label: string;\n    text?: string;\n    suffix?: string;\n    url?: string;\n    disabled?: boolean;\n}\n\nconst Meta: FC<MetaProps> = props => {\n    const { textMedium, textLight, placeholder } = useColors();\n    const onPress = useLinker(props.url || \"\", \"\", \"_blank\");\n    const text = props.disabled\n        ? \"N/A\"\n        : props.text\n        ? props.text + (props.suffix ? \" \" + props.suffix : \"\")\n        : \"Fetching…\";\n    return (\n        <FlexView style={{ justifyContent: \"space-between\", marginTop: 4 }}>\n            <Text note={!IS_DESKTOP} fontWeight={\"bold\"} style={{ color: props.disabled ? placeholder : textMedium }}>\n                {props.label}\n            </Text>\n            <Text\n                note={!IS_DESKTOP}\n                onPress={props.url ? onPress : undefined}\n                style={{\n                    color: props.disabled ? placeholder : props.text ? textMedium : textLight,\n                    textDecorationLine: props.url ? \"underline\" : \"none\"\n                }}>\n                {text}\n            </Text>\n        </FlexView>\n    );\n};\n\nexport default Meta;\n","var map = {\n\t\"./af\": 1229,\n\t\"./af.js\": 1229,\n\t\"./ar\": 1230,\n\t\"./ar-dz\": 1231,\n\t\"./ar-dz.js\": 1231,\n\t\"./ar-kw\": 1232,\n\t\"./ar-kw.js\": 1232,\n\t\"./ar-ly\": 1233,\n\t\"./ar-ly.js\": 1233,\n\t\"./ar-ma\": 1234,\n\t\"./ar-ma.js\": 1234,\n\t\"./ar-sa\": 1235,\n\t\"./ar-sa.js\": 1235,\n\t\"./ar-tn\": 1236,\n\t\"./ar-tn.js\": 1236,\n\t\"./ar.js\": 1230,\n\t\"./az\": 1237,\n\t\"./az.js\": 1237,\n\t\"./be\": 1238,\n\t\"./be.js\": 1238,\n\t\"./bg\": 1239,\n\t\"./bg.js\": 1239,\n\t\"./bm\": 1240,\n\t\"./bm.js\": 1240,\n\t\"./bn\": 1241,\n\t\"./bn-bd\": 1242,\n\t\"./bn-bd.js\": 1242,\n\t\"./bn.js\": 1241,\n\t\"./bo\": 1243,\n\t\"./bo.js\": 1243,\n\t\"./br\": 1244,\n\t\"./br.js\": 1244,\n\t\"./bs\": 1245,\n\t\"./bs.js\": 1245,\n\t\"./ca\": 1246,\n\t\"./ca.js\": 1246,\n\t\"./cs\": 1247,\n\t\"./cs.js\": 1247,\n\t\"./cv\": 1248,\n\t\"./cv.js\": 1248,\n\t\"./cy\": 1249,\n\t\"./cy.js\": 1249,\n\t\"./da\": 1250,\n\t\"./da.js\": 1250,\n\t\"./de\": 1251,\n\t\"./de-at\": 1252,\n\t\"./de-at.js\": 1252,\n\t\"./de-ch\": 1253,\n\t\"./de-ch.js\": 1253,\n\t\"./de.js\": 1251,\n\t\"./dv\": 1254,\n\t\"./dv.js\": 1254,\n\t\"./el\": 1255,\n\t\"./el.js\": 1255,\n\t\"./en-au\": 1256,\n\t\"./en-au.js\": 1256,\n\t\"./en-ca\": 1257,\n\t\"./en-ca.js\": 1257,\n\t\"./en-gb\": 1258,\n\t\"./en-gb.js\": 1258,\n\t\"./en-ie\": 1259,\n\t\"./en-ie.js\": 1259,\n\t\"./en-il\": 1260,\n\t\"./en-il.js\": 1260,\n\t\"./en-in\": 1261,\n\t\"./en-in.js\": 1261,\n\t\"./en-nz\": 1262,\n\t\"./en-nz.js\": 1262,\n\t\"./en-sg\": 1263,\n\t\"./en-sg.js\": 1263,\n\t\"./eo\": 1264,\n\t\"./eo.js\": 1264,\n\t\"./es\": 1265,\n\t\"./es-do\": 1266,\n\t\"./es-do.js\": 1266,\n\t\"./es-mx\": 1267,\n\t\"./es-mx.js\": 1267,\n\t\"./es-us\": 1268,\n\t\"./es-us.js\": 1268,\n\t\"./es.js\": 1265,\n\t\"./et\": 1269,\n\t\"./et.js\": 1269,\n\t\"./eu\": 1270,\n\t\"./eu.js\": 1270,\n\t\"./fa\": 1271,\n\t\"./fa.js\": 1271,\n\t\"./fi\": 1272,\n\t\"./fi.js\": 1272,\n\t\"./fil\": 1273,\n\t\"./fil.js\": 1273,\n\t\"./fo\": 1274,\n\t\"./fo.js\": 1274,\n\t\"./fr\": 1275,\n\t\"./fr-ca\": 1276,\n\t\"./fr-ca.js\": 1276,\n\t\"./fr-ch\": 1277,\n\t\"./fr-ch.js\": 1277,\n\t\"./fr.js\": 1275,\n\t\"./fy\": 1278,\n\t\"./fy.js\": 1278,\n\t\"./ga\": 1279,\n\t\"./ga.js\": 1279,\n\t\"./gd\": 1280,\n\t\"./gd.js\": 1280,\n\t\"./gl\": 1281,\n\t\"./gl.js\": 1281,\n\t\"./gom-deva\": 1282,\n\t\"./gom-deva.js\": 1282,\n\t\"./gom-latn\": 1283,\n\t\"./gom-latn.js\": 1283,\n\t\"./gu\": 1284,\n\t\"./gu.js\": 1284,\n\t\"./he\": 1285,\n\t\"./he.js\": 1285,\n\t\"./hi\": 1286,\n\t\"./hi.js\": 1286,\n\t\"./hr\": 1287,\n\t\"./hr.js\": 1287,\n\t\"./hu\": 1288,\n\t\"./hu.js\": 1288,\n\t\"./hy-am\": 1289,\n\t\"./hy-am.js\": 1289,\n\t\"./id\": 1290,\n\t\"./id.js\": 1290,\n\t\"./is\": 1291,\n\t\"./is.js\": 1291,\n\t\"./it\": 1292,\n\t\"./it-ch\": 1293,\n\t\"./it-ch.js\": 1293,\n\t\"./it.js\": 1292,\n\t\"./ja\": 1294,\n\t\"./ja.js\": 1294,\n\t\"./jv\": 1295,\n\t\"./jv.js\": 1295,\n\t\"./ka\": 1296,\n\t\"./ka.js\": 1296,\n\t\"./kk\": 1297,\n\t\"./kk.js\": 1297,\n\t\"./km\": 1298,\n\t\"./km.js\": 1298,\n\t\"./kn\": 1299,\n\t\"./kn.js\": 1299,\n\t\"./ko\": 1300,\n\t\"./ko.js\": 1300,\n\t\"./ku\": 1301,\n\t\"./ku.js\": 1301,\n\t\"./ky\": 1302,\n\t\"./ky.js\": 1302,\n\t\"./lb\": 1303,\n\t\"./lb.js\": 1303,\n\t\"./lo\": 1304,\n\t\"./lo.js\": 1304,\n\t\"./lt\": 1305,\n\t\"./lt.js\": 1305,\n\t\"./lv\": 1306,\n\t\"./lv.js\": 1306,\n\t\"./me\": 1307,\n\t\"./me.js\": 1307,\n\t\"./mi\": 1308,\n\t\"./mi.js\": 1308,\n\t\"./mk\": 1309,\n\t\"./mk.js\": 1309,\n\t\"./ml\": 1310,\n\t\"./ml.js\": 1310,\n\t\"./mn\": 1311,\n\t\"./mn.js\": 1311,\n\t\"./mr\": 1312,\n\t\"./mr.js\": 1312,\n\t\"./ms\": 1313,\n\t\"./ms-my\": 1314,\n\t\"./ms-my.js\": 1314,\n\t\"./ms.js\": 1313,\n\t\"./mt\": 1315,\n\t\"./mt.js\": 1315,\n\t\"./my\": 1316,\n\t\"./my.js\": 1316,\n\t\"./nb\": 1317,\n\t\"./nb.js\": 1317,\n\t\"./ne\": 1318,\n\t\"./ne.js\": 1318,\n\t\"./nl\": 1319,\n\t\"./nl-be\": 1320,\n\t\"./nl-be.js\": 1320,\n\t\"./nl.js\": 1319,\n\t\"./nn\": 1321,\n\t\"./nn.js\": 1321,\n\t\"./oc-lnc\": 1322,\n\t\"./oc-lnc.js\": 1322,\n\t\"./pa-in\": 1323,\n\t\"./pa-in.js\": 1323,\n\t\"./pl\": 1324,\n\t\"./pl.js\": 1324,\n\t\"./pt\": 1325,\n\t\"./pt-br\": 1326,\n\t\"./pt-br.js\": 1326,\n\t\"./pt.js\": 1325,\n\t\"./ro\": 1327,\n\t\"./ro.js\": 1327,\n\t\"./ru\": 1328,\n\t\"./ru.js\": 1328,\n\t\"./sd\": 1329,\n\t\"./sd.js\": 1329,\n\t\"./se\": 1330,\n\t\"./se.js\": 1330,\n\t\"./si\": 1331,\n\t\"./si.js\": 1331,\n\t\"./sk\": 1332,\n\t\"./sk.js\": 1332,\n\t\"./sl\": 1333,\n\t\"./sl.js\": 1333,\n\t\"./sq\": 1334,\n\t\"./sq.js\": 1334,\n\t\"./sr\": 1335,\n\t\"./sr-cyrl\": 1336,\n\t\"./sr-cyrl.js\": 1336,\n\t\"./sr.js\": 1335,\n\t\"./ss\": 1337,\n\t\"./ss.js\": 1337,\n\t\"./sv\": 1338,\n\t\"./sv.js\": 1338,\n\t\"./sw\": 1339,\n\t\"./sw.js\": 1339,\n\t\"./ta\": 1340,\n\t\"./ta.js\": 1340,\n\t\"./te\": 1341,\n\t\"./te.js\": 1341,\n\t\"./tet\": 1342,\n\t\"./tet.js\": 1342,\n\t\"./tg\": 1343,\n\t\"./tg.js\": 1343,\n\t\"./th\": 1344,\n\t\"./th.js\": 1344,\n\t\"./tk\": 1345,\n\t\"./tk.js\": 1345,\n\t\"./tl-ph\": 1346,\n\t\"./tl-ph.js\": 1346,\n\t\"./tlh\": 1347,\n\t\"./tlh.js\": 1347,\n\t\"./tr\": 1348,\n\t\"./tr.js\": 1348,\n\t\"./tzl\": 1349,\n\t\"./tzl.js\": 1349,\n\t\"./tzm\": 1350,\n\t\"./tzm-latn\": 1351,\n\t\"./tzm-latn.js\": 1351,\n\t\"./tzm.js\": 1350,\n\t\"./ug-cn\": 1352,\n\t\"./ug-cn.js\": 1352,\n\t\"./uk\": 1353,\n\t\"./uk.js\": 1353,\n\t\"./ur\": 1354,\n\t\"./ur.js\": 1354,\n\t\"./uz\": 1355,\n\t\"./uz-latn\": 1356,\n\t\"./uz-latn.js\": 1356,\n\t\"./uz.js\": 1355,\n\t\"./vi\": 1357,\n\t\"./vi.js\": 1357,\n\t\"./x-pseudo\": 1358,\n\t\"./x-pseudo.js\": 1358,\n\t\"./yo\": 1359,\n\t\"./yo.js\": 1359,\n\t\"./zh-cn\": 1360,\n\t\"./zh-cn.js\": 1360,\n\t\"./zh-hk\": 1361,\n\t\"./zh-hk.js\": 1361,\n\t\"./zh-mo\": 1362,\n\t\"./zh-mo.js\": 1362,\n\t\"./zh-tw\": 1363,\n\t\"./zh-tw.js\": 1363\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1365;","import React, { FC, ReactNode, useState } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Heading from \"./Heading\";\n\nexport interface ExpandableProps {\n    title: string;\n    expanded: boolean;\n    onExpand?: () => void;\n    style?: ViewStyle;\n    children?: ReactNode;\n}\n\nconst Expandable: FC<ExpandableProps> = props => {\n    const t = useTranslation();\n    const [expanded, setExpanded] = useState(true);\n    const shouldExpand = props.expanded && expanded;\n    const buttonText = shouldExpand ? undefined : t(\"change\");\n    const onPress = () => {\n        setExpanded(true);\n        props.onExpand?.();\n    };\n\n    return (\n        <View style={props.style}>\n            <Heading text={props.title} buttonText={buttonText} onPressButton={onPress} />\n            <View style={{ display: shouldExpand ? \"flex\" : \"none\" }}>{props.children}</View>\n        </View>\n    );\n};\n\nexport default Expandable;\n","import React, { FC } from \"react\";\nimport { TouchableHighlight, View, ViewProps, ViewStyle } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface SelectableProps extends ViewProps {\n    selected: boolean;\n    onPress?: () => void;\n    disabled?: boolean;\n    containerStyle?: ViewStyle;\n}\n\nconst Selectable: FC<SelectableProps> = props => {\n    const { borderDark, accent, overlay } = useColors();\n    const { border } = useStyles();\n    const { background, backgroundLight } = useColors();\n    return (\n        <Hoverable style={props.containerStyle}>\n            {({ hovered }) => (\n                <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={props.onPress}>\n                    <View\n                        {...props}\n                        style={[\n                            {\n                                ...border({ color: props.selected ? accent : borderDark }),\n                                backgroundColor: hovered && !props.disabled ? backgroundLight : background\n                            },\n                            props.style\n                        ]}\n                    />\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nexport default Selectable;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React, { useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport useColors from \"../hooks/useColors\";\nimport Token from \"../types/Token\";\nimport { isWETH } from \"../utils\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const { backgroundLight: disabled } = useColors();\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && isWETH(props.token) ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? disabled : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={!props.token.logoURI || error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import { Fraction as SDKFraction } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\n\nclass Fraction {\n    static BASE = ethers.BigNumber.from(10).pow(18);\n    static NAN = new Fraction(ethers.constants.Zero, ethers.constants.Zero);\n    static ZERO = new Fraction(ethers.constants.Zero, ethers.constants.One);\n    static convert(sdk: SDKFraction) {\n        return new Fraction(\n            ethers.BigNumber.from(sdk.numerator.toString()),\n            ethers.BigNumber.from(sdk.denominator.toString())\n        );\n    }\n    static from(numerator: ethers.BigNumberish, denominator: ethers.BigNumberish) {\n        return new Fraction(ethers.BigNumber.from(numerator), ethers.BigNumber.from(denominator));\n    }\n    static fromTokens(\n        numerator: ethers.BigNumberish,\n        denominator: ethers.BigNumberish,\n        numeratorToken: Token,\n        denominatorToken: Token\n    ) {\n        return new Fraction(\n            ethers.BigNumber.from(numerator).mul(ethers.BigNumber.from(10).pow(denominatorToken.decimals)),\n            ethers.BigNumber.from(denominator).mul(ethers.BigNumber.from(10).pow(numeratorToken.decimals))\n        );\n    }\n    static parse(value: string) {\n        return value === \"\"\n            ? Fraction.NAN\n            : isEmptyValue(value)\n            ? Fraction.ZERO\n            : new Fraction(parseBalance(value, 18), Fraction.BASE);\n    }\n\n    numerator: ethers.BigNumber;\n    denominator: ethers.BigNumber;\n\n    private constructor(numerator: ethers.BigNumber, denominator: ethers.BigNumber) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n    }\n\n    isZero() {\n        return !this.isNaN() && this.numerator.isZero();\n    }\n\n    isNaN() {\n        return this.denominator.isZero();\n    }\n\n    eq(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .eq(this.denominator);\n    }\n\n    gt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .gt(this.denominator);\n    }\n\n    lt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .lt(this.denominator);\n    }\n\n    toString(maxFractions = 8) {\n        if (this.isNaN()) return \"\";\n        if (this.isZero()) return \"0\";\n        let str = formatBalance(this.numerator.mul(Fraction.BASE).div(this.denominator), 18, maxFractions);\n        if (str.endsWith(\".0\")) str = str.substring(0, str.length - 2);\n        return str;\n    }\n\n    apply(value: ethers.BigNumberish) {\n        return this.denominator.isZero() ? ethers.constants.Zero : this.numerator.mul(value).div(this.denominator);\n    }\n}\n\nexport default Fraction;\n","import { useCallback } from \"react\";\n\nimport { Percent, Router, Trade } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { ROUTER } from \"../constants/contracts\";\nimport Token from \"../types/Token\";\nimport { deduct, getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\n\nexport const FEE = new Percent(\"3\", \"1000\"); // 0.3%\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapRouter = () => {\n    const allowedSlippage = new Percent(\"50\", \"10000\"); // 0.05%\n    const ttl = 60 * 20;\n\n    const swap = useCallback(async (trade: Trade, signer: ethers.Signer) => {\n        if (trade) {\n            const params = Router.swapCallParameters(trade, {\n                feeOnTransfer: false,\n                allowedSlippage,\n                recipient: await signer.getAddress(),\n                ttl\n            });\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const gasLimit = await router.estimateGas[params.methodName](...params.args, {\n                value: params.value\n            });\n            const tx = await router.functions[params.methodName](...params.args, {\n                value: params.value,\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            await logTransaction(\n                tx,\n                \"UniswapV2Router02.\" + params.methodName + \"()\",\n                ...params.args.map(arg => arg.toString())\n            );\n            return {\n                trade,\n                tx\n            };\n        }\n    }, []);\n\n    const addLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                fromAmount,\n                toAmount,\n                deduct(fromAmount, allowedSlippage),\n                deduct(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidity(...args);\n            const tx = await router.functions.addLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidityETH = useCallback(\n        async (\n            token: Token,\n            liquidity: ethers.BigNumber,\n            amount: ethers.BigNumber,\n            amountETH: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                liquidity,\n                deduct(amount, allowedSlippage),\n                deduct(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidityETH(...args);\n            const tx = await router.functions.removeLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            liquidity: ethers.BigNumber,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                liquidity,\n                deduct(fromAmount, allowedSlippage),\n                deduct(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidity(...args);\n            const tx = await router.functions.removeLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const addLiquidityETH = useCallback(\n        async (token: Token, amount: ethers.BigNumber, amountETH: ethers.BigNumber, signer: ethers.Signer) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                amount,\n                deduct(amount, allowedSlippage),\n                deduct(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidityETH(...args, {\n                value: amountETH\n            });\n            const tx = await router.functions.addLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100),\n                value: amountETH\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const calculateSwapFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(3).div(1000);\n    };\n\n    return {\n        allowedSlippage,\n        ttl,\n        swap,\n        addLiquidity,\n        addLiquidityETH,\n        removeLiquidity,\n        removeLiquidityETH,\n        calculateSwapFee\n    };\n};\n\nexport default useSwapRouter;\n","import { useCallback } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport { ORDER_BOOK, SETTLEMENT } from \"../constants/contracts\";\nimport Fraction from \"../constants/Fraction\";\nimport Token from \"../types/Token\";\nimport { getContract, pow10 } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport useSwapRouter from \"./useSwapRouter\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSettlement = () => {\n    const { calculateSwapFee } = useSwapRouter();\n\n    const createOrder = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            amountIn: ethers.BigNumber,\n            amountOutMin: ethers.BigNumber,\n            signer: ethers.Signer,\n            kovanSigner: ethers.Signer\n        ) => {\n            const order = new Order(signer, fromToken, toToken, amountIn, amountOutMin, await signer.getAddress());\n            const args = await order.toArgs();\n\n            const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n            const gasLimit = await orderBook.estimateGas.createOrder(args);\n            const tx = await orderBook.createOrder(args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return await logTransaction(tx, \"OrderBook.createOrder()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const cancelOrder = useCallback(async (order: Order, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const args = (await order.toArgs()).slice(0, 7);\n        const gasLimit = await settlement.estimateGas.cancelOrder(...args);\n        const tx = await settlement.cancelOrder(...args, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return await logTransaction(tx, \"Settlement.cancelOrder()\", ...args.map(arg => arg.toString()));\n    }, []);\n\n    const queryOrderFilledEvents = useCallback(async (hash: string, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const filter = settlement.filters.OrderFilled(hash);\n        return await settlement.queryFilter(filter);\n    }, []);\n\n    const calculateLimitOrderFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(2).div(1000);\n    };\n\n    const calculateLimitOrderReturn = (\n        fromToken: Token,\n        toToken: Token,\n        fromAmount: ethers.BigNumber,\n        price: string\n    ) => {\n        const limitOrderFeeDeducted = fromAmount.sub(calculateLimitOrderFee(fromAmount));\n        const swapFeeDeducted = limitOrderFeeDeducted.sub(calculateSwapFee(limitOrderFeeDeducted));\n        const fraction = Fraction.parse(price);\n        return swapFeeDeducted\n            .mul(pow10(toToken.decimals))\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .div(pow10(fromToken.decimals));\n    };\n\n    return { createOrder, cancelOrder, queryOrderFilledEvents, calculateLimitOrderFee, calculateLimitOrderReturn };\n};\n\nexport type OrderStatus = \"Open\" | \"Expired\" | \"Filled\" | \"Canceled\";\n\nexport class Order {\n    maker: ethers.Signer;\n    fromToken: Token;\n    toToken: Token;\n    amountIn: ethers.BigNumber;\n    amountOutMin: ethers.BigNumber;\n    recipient: string;\n    deadline: ethers.BigNumber;\n    v?: number;\n    r?: string;\n    s?: string;\n    filledAmountIn?: ethers.BigNumber;\n    canceled?: boolean;\n\n    constructor(\n        maker: ethers.Signer,\n        fromToken: Token,\n        toToken: Token,\n        amountIn: ethers.BigNumber,\n        amountOutMin: ethers.BigNumber,\n        recipient: string,\n        deadline = ethers.BigNumber.from(Math.floor(Date.now() / 1000 + 24 * 3600)),\n        v?: number,\n        r?: string,\n        s?: string,\n        filledAmountIn?: ethers.BigNumber,\n        canceled?: boolean\n    ) {\n        this.maker = maker;\n        this.fromToken = fromToken;\n        this.toToken = toToken;\n        this.amountIn = amountIn;\n        this.amountOutMin = amountOutMin;\n        this.recipient = recipient;\n        this.deadline = deadline;\n        this.v = v;\n        this.r = r;\n        this.s = s;\n        this.filledAmountIn = filledAmountIn;\n        this.canceled = canceled;\n    }\n\n    status(): OrderStatus {\n        return this.canceled\n            ? \"Canceled\"\n            : this.filledAmountIn?.eq(this.amountIn)\n            ? \"Filled\"\n            : this.deadline.toNumber() * 1000 < Date.now()\n            ? \"Expired\"\n            : \"Open\";\n    }\n\n    async hash() {\n        const settlement = await getContract(\"Settlement\", SETTLEMENT, this.maker);\n        return await settlement.hashOfOrder(\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline\n        );\n    }\n\n    async sign() {\n        const hash = await this.hash();\n        const signature = await this.maker.signMessage(ethers.utils.arrayify(hash));\n        return ethers.utils.splitSignature(signature);\n    }\n\n    async toArgs() {\n        const { v, r, s } = this.v && this.r && this.s ? { v: this.v, r: this.r, s: this.s } : await this.sign();\n        return [\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline,\n            v,\n            r,\n            s\n        ];\n    }\n}\n\nexport default useSettlement;\n","import { FACTORY_ADDRESS as SUSHISWAP_FACTORY, Pair } from \"@sushiswap/sdk\";\nimport sushiData from \"@sushiswap/sushi-data\";\nimport { FACTORY_ADDRESS as UNISWAP_FACTORY } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { LP_TOKEN_SCANNER, MASTER_CHEF, ORDER_BOOK, SETTLEMENT } from \"../constants/contracts\";\nimport Fraction from \"../constants/Fraction\";\nimport { ETH } from \"../constants/tokens\";\n// import { ALCHEMY_PROVIDER } from \"../context/EthersContext\";\nimport { Order, OrderStatus } from \"../hooks/useSettlement\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport {\n    convertToken,\n    formatBalance,\n    getContract,\n    isETH,\n    isWETH,\n    parseBalance,\n    parseCurrencyAmount,\n    pow10\n} from \"./index\";\n\nconst blocksPerDay = 6500;\n\nexport const fetchTokens = async (account: string, customTokens?: Token[]) => {\n    const response = await fetch(\"https://get.1-b.tc/tokens.json\");\n    const json = await response.json();\n    const tokens = [...json.tokens, ...(customTokens || [])];\n\n    const balances = await fetchTokenBalances(\n        account,\n        tokens.map(token => token.address)\n    );\n    return [\n        {\n            ...ETH,\n            balance: await ALCHEMY_PROVIDER.getBalance(account)\n        },\n        ...tokens.map((token, i) => ({\n            ...token,\n            balance: ethers.BigNumber.from(balances[i] || 0)\n        }))\n    ];\n};\n\nexport const fetchTokenWithValue = async (\n    token: Token,\n    weth: Token,\n    wethPriceUSD: Fraction,\n    getPair: (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => Promise<Pair>,\n    provider: ethers.providers.BaseProvider\n) => {\n    let fetched: TokenWithValue;\n    if (isETH(token) || isWETH(token)) {\n        fetched = {\n            ...token,\n            priceUSD: Number(wethPriceUSD.toString()),\n            valueUSD: Number(formatBalance(wethPriceUSD.apply(token.balance)))\n        } as TokenWithValue;\n    } else {\n        try {\n            const pair = await getPair(token, weth, provider);\n            const priceETH = Fraction.convert(pair.priceOf(convertToken(token)));\n            const priceUSD = priceETH.apply(wethPriceUSD.numerator).div(pow10(18 - token.decimals));\n            fetched = {\n                ...token,\n                priceUSD: Number(formatBalance(priceUSD)),\n                valueUSD: Number(formatBalance(priceUSD.mul(token.balance).div(pow10(token.decimals))))\n            } as TokenWithValue;\n        } catch (e) {\n            fetched = { ...token, priceUSD: null, valueUSD: null } as TokenWithValue;\n        }\n    }\n    return fetched;\n};\n\n// tslint:disable-next-line:max-func-body-length\nexport const fetchPools = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const info = await sushiData.sushi.info();\n    const masterchefInfo = await sushiData.masterchef.info();\n    const pools = await sushiData.masterchef.pools();\n    const reduce = await sushiData.masterchef.pool({ poolId: \"45\" });\n    if (!reduce) return undefined;\n    const sushiPerBlock = Math.floor(100 - 100 * (reduce.allocPoint / masterchefInfo.totalAllocPoint));\n    const balances = await fetchTokenBalances(\n        account,\n        pools.map(pool => pool.pair)\n    );\n    // tslint:disable-next-line:max-func-body-length\n    const fetchPool = async (pool, i): Promise<LPToken | null> => {\n        if (pool.slpBalance === 0) return null;\n        try {\n            const result = await Promise.all([\n                fetchStakedValue(pool.pair),\n                fetchPairTokens(pool.pair, tokens, provider)\n            ]);\n            if (!result[0]) return null;\n            const apy = calcAPY(\n                info.derivedETH,\n                sushiPerBlock,\n                pool.allocPoint,\n                masterchefInfo.totalAllocPoint,\n                result[0].totalValueETH,\n                pool.slpBalance,\n                result[0].totalSupply\n            );\n            if (apy === 0) return null;\n            return {\n                ...pool,\n                apy,\n                address: pool.pair,\n                decimals: 18,\n                tokenA: result[1].tokenA,\n                tokenB: result[1].tokenB,\n                symbol: result[1].tokenA.symbol + \"-\" + result[1].tokenB.symbol + \" LP\",\n                balance: ethers.BigNumber.from(balances[i] || 0),\n                sushiRewardedPerYear: calcSushiRewardedPerYear(\n                    sushiPerBlock,\n                    pool.allocPoint,\n                    masterchefInfo.totalAllocPoint,\n                    result[0].totalSupply\n                ),\n                totalSupply: parseBalance(String(result[0].totalSupply), 18),\n                totalValueUSD: result[0].totalValueUSD,\n                multiplier: pool.allocPoint / 1000\n            };\n        } catch (e) {\n            return null;\n        }\n    };\n    return (await Promise.all(pools.map(fetchPool))).filter(pool => !!pool) as LPToken[];\n};\n\nexport const fetchMyPools = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const pools = await sushiData.masterchef.pools();\n    const fetchMyPool = async (pool): Promise<LPToken | null> => {\n        try {\n            const myStake = await fetchMyStake(pool.id, account, provider);\n            if (myStake.amountDeposited.isZero()) return null;\n            const result = await Promise.all([\n                fetchStakedValue(pool.pair),\n                fetchPairTokens(pool.pair, tokens, provider)\n            ]);\n            return {\n                ...pool,\n                address: pool.pair,\n                decimals: 18,\n                tokenA: result[1].tokenA,\n                tokenB: result[1].tokenB,\n                symbol: result[1].tokenA.symbol + \"-\" + result[1].tokenB.symbol + \" LP\",\n                balance: ethers.constants.Zero,\n                amountDeposited: myStake.amountDeposited,\n                pendingSushi: myStake.pendingSushi,\n                totalSupply: parseBalance(String(result[0].totalSupply), 18)\n            };\n        } catch (e) {\n            return null;\n        }\n    };\n    return (await Promise.all(pools.map(fetchMyPool))).filter(pool => !!pool) as LPToken[];\n};\n\nconst calcAPY = (derivedETH, sushiPerBlock, allocPoint, totalAllocPoint, totalValueETH, slpBalance, totalSupply) => {\n    return (\n        (derivedETH * blocksPerDay * sushiPerBlock * 3 * 365 * (allocPoint / totalAllocPoint)) /\n        (totalValueETH * (slpBalance / totalSupply))\n    );\n};\n\nconst calcSushiRewardedPerYear = (sushiPerBlock, allocPoint, totalAllocPoint, totalSupply) => {\n    return ethers.BigNumber.from(blocksPerDay * sushiPerBlock * 3 * 365 * allocPoint)\n        .mul(pow10(36))\n        .div(totalAllocPoint)\n        .div(parseBalance(String(totalSupply)));\n};\n\nconst fetchStakedValue = async (lpToken: string) => {\n    return await sushiData.masterchef.stakedValue({ lpToken });\n};\n\nconst fetchMyStake = async (poolId: number, account: string, provider: ethers.providers.JsonRpcProvider) => {\n    const masterChef = getContract(\"MasterChef\", MASTER_CHEF, provider);\n    const { amount: amountDeposited } = await masterChef.userInfo(poolId, account);\n    const pendingSushi = await masterChef.pendingSushi(poolId, account);\n    return { amountDeposited, pendingSushi };\n};\n\nconst fetchPairTokens = async (pair: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const contract = getContract(\"IUniswapV2Pair\", pair, provider);\n    const tokenA = await findOrFetchToken(await contract.token0(), provider, tokens);\n    const tokenB = await findOrFetchToken(await contract.token1(), provider, tokens);\n    return { tokenA, tokenB };\n};\n\nexport const fetchMyLPTokens = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    return await fetchLPTokens(SUSHISWAP_FACTORY, account, tokens, provider);\n};\n\nexport const fetchMyUniswapLPTokens = async (\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    return await fetchLPTokens(UNISWAP_FACTORY, account, tokens, provider);\n};\n\nconst LP_TOKENS_LIMIT = 100;\n\n// tslint:disable-next-line:max-func-body-length\nconst fetchLPTokens = async (\n    factory: string,\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    const factoryContract = getContract(\"IUniswapV2Factory\", factory, provider);\n    const length = await factoryContract.allPairsLength();\n    const scanner = getContract(\"LPTokenScanner\", LP_TOKEN_SCANNER, provider);\n    const pages: number[] = [];\n    for (let i = 0; i < length; i += LP_TOKENS_LIMIT) pages.push(i);\n    const pairs = (\n        await Promise.all(\n            pages.map(page =>\n                scanner.findPairs(account, factory, page, Math.min(page + LP_TOKENS_LIMIT, length.toNumber()))\n            )\n        )\n    ).flat();\n    const balances = await fetchTokenBalances(\n        account,\n        pairs.map(pair => pair.token)\n    );\n    return await Promise.all(\n        pairs.map(async (pair, index) => {\n            const erc20 = getContract(\"ERC20\", pair.token, provider);\n            const result = await Promise.all([\n                erc20.decimals(),\n                erc20.totalSupply(),\n                fetchPairTokens(pair.token, tokens, provider)\n            ]);\n            return {\n                address: pair.token,\n                decimals: Number(result[0]),\n                name: result[2].tokenA.symbol + \"-\" + result[2].tokenB.symbol + \" LP Token\",\n                symbol: result[2].tokenA.symbol + \"-\" + result[2].tokenB.symbol,\n                balance: ethers.BigNumber.from(balances[index]),\n                totalSupply: result[1],\n                tokenA: result[2].tokenA,\n                tokenB: result[2].tokenB\n            } as LPToken;\n        })\n    );\n};\n\nexport const findOrFetchToken = async (\n    address: string,\n    provider: ethers.providers.JsonRpcProvider,\n    tokens?: Token[]\n) => {\n    if (tokens) {\n        const token = tokens.find(t => t.address.toLowerCase() === address.toLowerCase());\n        if (token) {\n            return token;\n        }\n    }\n    let meta = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenMetadata\", [address]);\n    if (!meta.name || meta.symbol || meta.decimals || meta.logoURI) {\n        meta = await fetchTokenMeta(address, provider);\n    }\n    return {\n        address,\n        name: meta.name,\n        symbol: meta.symbol,\n        decimals: meta.decimals,\n        logoURI: meta.logo,\n        balance: ethers.constants.Zero\n    } as Token;\n};\n\nconst fetchTokenMeta = async (address: string, provider: ethers.providers.JsonRpcProvider) => {\n    const erc20 = getContract(\"ERC20\", address, provider);\n    const data = await Promise.all(\n        [\"name\", \"symbol\", \"decimals\"].map(field => {\n            try {\n                return erc20.callStatic[field]();\n            } catch (e) {\n                return \"\";\n            }\n        })\n    );\n    return {\n        name: data[0],\n        symbol: data[1],\n        decimals: data[2],\n        logoURI: \"\"\n    };\n};\n\nexport const fetchLPTokenWithValue = async (\n    lpToken: LPToken,\n    weth: Token,\n    wethPriceUSD: Fraction,\n    getPair: (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => Promise<Pair>,\n    provider: ethers.providers.BaseProvider\n) => {\n    const pair = await getPair(lpToken.tokenA, lpToken.tokenB, provider);\n    const values = await Promise.all([\n        await fetchTotalValue(lpToken.tokenA, pair, weth, wethPriceUSD, getPair, provider),\n        await fetchTotalValue(lpToken.tokenB, pair, weth, wethPriceUSD, getPair, provider)\n    ]);\n    const priceUSD = values[0]\n        .add(values[1])\n        .mul(pow10(18))\n        .div(lpToken.totalSupply);\n    return {\n        ...lpToken,\n        priceUSD: Number(formatBalance(priceUSD)),\n        valueUSD: Number(\n            formatBalance(priceUSD.mul(lpToken.amountDeposited || lpToken.balance).div(pow10(lpToken.decimals)))\n        )\n    };\n};\n\nconst fetchTotalValue = async (token: Token, lpPair: Pair, weth: Token, wethPriceUSD: Fraction, getPair, provider) => {\n    const tokenWithValue = await fetchTokenWithValue(token, weth, wethPriceUSD, getPair, provider);\n    const tokenReserve = parseCurrencyAmount(lpPair.reserveOf(convertToken(token)), token.decimals);\n    const tokenPrice = parseBalance(String(tokenWithValue.priceUSD || 0));\n    return tokenReserve.mul(tokenPrice).div(pow10(token.decimals));\n};\n\nconst fetchTokenBalances = async (account: string, addresses: string[]) => {\n    const balances = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenBalances\", [account, addresses]);\n    return balances.tokenBalances.map(balance => balance.tokenBalance);\n};\n\nconst LIMIT_ORDERS_LIMIT = 20;\n\nexport const fetchMyLimitOrders = async (\n    provider: ethers.providers.JsonRpcProvider,\n    signer: ethers.Signer,\n    kovanSigner: ethers.Signer,\n    tokens?: Token[],\n    canceledHashes?: string[]\n) => {\n    const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, provider);\n    const maker = await signer.getAddress();\n    const length = await orderBook.numberOfHashesOfMaker(maker);\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    const hashes = (await Promise.all(pages.map(page => orderBook.hashesOfMaker(maker, page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n    const myOrders = await Promise.all(\n        hashes.map(async hash => {\n            const args = await orderBook.orderOfHash(hash);\n            return new Order(\n                signer,\n                await findOrFetchToken(args.fromToken, provider, tokens),\n                await findOrFetchToken(args.toToken, provider, tokens),\n                args.amountIn,\n                args.amountOutMin,\n                args.recipient,\n                args.deadline,\n                args.v,\n                args.r,\n                args.s,\n                await settlement.filledAmountInOfHash(hash),\n                canceledHashes && canceledHashes.includes(hash)\n            );\n        })\n    );\n    return myOrders.sort(compareOrders) as Order[];\n};\n\nconst compareOrders = (o0, o1) => {\n    const status = (s: OrderStatus) => (s === \"Open\" ? 0 : s === \"Filled\" ? 1 : 2);\n    const compared = status(o0.status()) - status(o1.status());\n    return compared === 0 ? o1.deadline.toNumber() - o0.deadline.toNumber() : compared;\n};\n\nexport const fetchMyCanceledLimitOrderHashes = async (signer: ethers.providers.JsonRpcSigner) => {\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, signer);\n    const length = await settlement.numberOfCanceledHashesOfMaker(await signer.getAddress());\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    return (await Promise.all(pages.map(page => settlement.allCanceledHashes(page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n};\n","import { useCallback, useContext, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { fetchMyCanceledLimitOrderHashes, fetchMyLimitOrders } from \"../utils/fetch-utils\";\nimport useSettlement, { Order } from \"./useSettlement\";\n\nexport interface MyLimitOrdersState {\n    lastTimeRefreshed: number;\n    myOrders?: Order[];\n    loading: boolean;\n    selectedOrder?: Order;\n    setSelectedOrder: (order?: Order) => void;\n    onCancelOrder: () => Promise<void>;\n    cancellingOrder: boolean;\n    filledEvents?: ethers.Event[];\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useMyLimitOrdersState = () => {\n    const { cancelOrder, queryOrderFilledEvents } = useSettlement();\n    const { provider, signer, kovanSigner, address, tokens } = useContext(EthersContext);\n    const [lastTimeRefreshed, setLastTimeRefreshed] = useState(0);\n    const [myOrders, setMyOrders] = useState<Order[]>();\n    const [selectedOrder, setSelectedOrder] = useState<Order>();\n    const [loading, setLoading] = useState(true);\n    const [cancellingOrder, setCancellingOrder] = useState(false);\n    const [filledEvents, setFilledEvents] = useState<ethers.Event[]>();\n\n    const updateOrders = async () => {\n        if (provider && signer && kovanSigner && address && tokens) {\n            setLoading(true);\n            try {\n                const canceledHashes = await fetchMyCanceledLimitOrderHashes(signer);\n                const orders = await fetchMyLimitOrders(provider, signer, kovanSigner, tokens, canceledHashes);\n                setMyOrders(orders);\n            } finally {\n                setLoading(false);\n            }\n        }\n    };\n\n    useAsyncEffect(updateOrders, [provider, signer, kovanSigner, address, tokens, lastTimeRefreshed]);\n\n    useAsyncEffect(async () => {\n        setFilledEvents(undefined);\n        if (selectedOrder && signer) {\n            setFilledEvents(await queryOrderFilledEvents(await selectedOrder.hash(), signer));\n        }\n    }, [selectedOrder, queryOrderFilledEvents]);\n\n    const onCancelOrder = useCallback(async () => {\n        if (selectedOrder && signer) {\n            setCancellingOrder(true);\n            try {\n                const tx = await cancelOrder(selectedOrder, signer);\n                await tx.wait();\n                setSelectedOrder(undefined);\n                setLastTimeRefreshed(Date.now());\n            } finally {\n                setCancellingOrder(false);\n            }\n        }\n    }, [selectedOrder, signer]);\n\n    return {\n        lastTimeRefreshed,\n        myOrders,\n        loading,\n        selectedOrder,\n        setSelectedOrder,\n        onCancelOrder,\n        cancellingOrder,\n        filledEvents\n    };\n};\n\nexport default useMyLimitOrdersState;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { FlatList, Platform, View } from \"react-native\";\n\nimport moment from \"moment\";\nimport useAsyncEffect from \"use-async-effect\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Expandable from \"../components/Expandable\";\nimport FlexView from \"../components/FlexView\";\nimport InfoBox from \"../components/InfoBox\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"../components/ItemSeparator\";\nimport Loading from \"../components/Loading\";\nimport Meta from \"../components/Meta\";\nimport Selectable from \"../components/Selectable\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenAmount from \"../components/TokenAmount\";\nimport TokenLogo from \"../components/TokenLogo\";\nimport TokenSymbol from \"../components/TokenSymbol\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { SwapSubMenu } from \"../components/web/WebSubMenu\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport useColors from \"../hooks/useColors\";\nimport useMyLimitOrdersState, { MyLimitOrdersState } from \"../hooks/useMyLimitOrdersState\";\nimport { Order } from \"../hooks/useSettlement\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { formatBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst SHTHistoryScreen = () => {\n    const t = useTranslation();\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={t(\"pool-history\")} />\n                    <Text light={true}>{t(\"pool-history-desc\")}</Text>\n                    <MyLimitOrders />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n            <SwapSubMenu />\n        </Screen>\n    );\n};\n\nconst MyLimitOrders = () => {\n    const state = useMyLimitOrdersState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <OrderSelect state={state} />\n            <OrderInfo state={state} />\n        </View>\n    );\n};\n\nconst OrderSelect = (props: { state: MyLimitOrdersState }) => {\n    const t = useTranslation();\n    return (\n        <View>\n            <Expandable\n                title={t(\"pool-daily-mined-history\")}\n                expanded={!props.state.selectedOrder}\n                onExpand={() => props.state.setSelectedOrder()}>\n                <OrderList state={props.state} />\n            </Expandable>\n            {props.state.selectedOrder && (\n                <OrderItem\n                    order={props.state.selectedOrder}\n                    selected={true}\n                    onSelectOrder={() => props.state.setSelectedOrder()}\n                />\n            )}\n        </View>\n    );\n};\n\nconst OrderList = ({ state }: { state: MyLimitOrdersState }) => {\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <OrderItem key={item.address} order={item} selected={false} onSelectOrder={state.setSelectedOrder} />\n            );\n        },\n        [state.setSelectedOrder]\n    );\n    return state.loading || !state.myOrders ? (\n        <Loading />\n    ) : state.myOrders.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList data={state.myOrders} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    const t = useTranslation();\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {t(\"you-dont-have-limit-orders\")}\n            </Text>\n        </View>\n    );\n};\n\nconst OrderItem = (props: { order: Order; selected: boolean; onSelectOrder: (order: Order) => void }) => {\n    const t = useTranslation();\n    const { amountIn, amountOutMin, fromToken, toToken } = props.order;\n    const status = props.order.status();\n    const disabled = status !== \"Open\";\n    const price = Fraction.fromTokens(amountOutMin, amountIn, toToken, fromToken);\n    const onPress = useCallback(() => props.onSelectOrder(props.order), [props.onSelectOrder, props.order]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <View>\n                    <Token token={fromToken} amount={amountIn} disabled={disabled} buy={false} />\n                    <View style={{ height: Spacing.tiny }} />\n                    <Token token={toToken} amount={amountOutMin} disabled={disabled} buy={true} />\n                </View>\n                <Field\n                    label={t(\"price\")}\n                    value={props.order.canceled ? t(\"canceled\") : price.toString(8)}\n                    disabled={disabled}\n                    minWidth={0}\n                />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nconst Token = ({ token, amount, disabled, buy }) => {\n    const { green, red, disabled: colorDisabled } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"center\" }}>\n            <TokenLogo small={true} token={token} disabled={disabled} />\n            <Text\n                fontWeight={\"bold\"}\n                note={true}\n                style={{ color: disabled ? colorDisabled : buy ? green : red, marginLeft: Spacing.tiny }}>\n                {buy ? \"﹢\" : \"﹣\"}\n            </Text>\n            <TokenAmount token={token} amount={amount} disabled={disabled} />\n            {IS_DESKTOP && <TokenSymbol token={token} disabled={disabled} />}\n        </FlexView>\n    );\n};\n\nconst Field = ({ label, value, disabled, minWidth }) => {\n    const { textMedium, textLight, disabled: colorDisabled } = useColors();\n    return (\n        <View style={{ flex: minWidth ? 0 : 1, minWidth, marginLeft: Spacing.tiny }}>\n            <Text note={true} style={{ textAlign: \"right\", color: disabled ? colorDisabled : textLight }}>\n                {label}\n            </Text>\n            <Text\n                caption={true}\n                light={true}\n                style={{ textAlign: \"right\", color: disabled ? colorDisabled : textMedium }}>\n                {value}\n            </Text>\n        </View>\n    );\n};\n\nconst OrderInfo = ({ state }: { state: MyLimitOrdersState }) => {\n    const t = useTranslation();\n    const order = state.selectedOrder;\n    const amountIn = order ? formatBalance(order.amountIn, order.fromToken.decimals) : undefined;\n    const amountOutMin = order ? formatBalance(order.amountOutMin, order.toToken.decimals) : undefined;\n    const filledAmountIn = order ? formatBalance(order.filledAmountIn!, order.fromToken.decimals) : undefined;\n    const expiry = useMemo(() => {\n        if (order) {\n            const deadline = new Date(order.deadline.toNumber() * 1000);\n            const now = Date.now();\n            const diff = moment(deadline).diff(now);\n            return moment(deadline).isAfter(now) ? moment.utc(diff).format(\"HH[h] mm[m]\") : null;\n        }\n    }, [order]);\n    const disabled = !state.selectedOrder;\n    return (\n        <InfoBox>\n            <Meta label={t(\"day-btc-total-reward\")} text={order?.status()} disabled={disabled} />\n            <Meta\n                label={t(\"day-new-staked-users\")}\n                text={filledAmountIn}\n                suffix={order?.fromToken?.symbol}\n                disabled={disabled}\n            />\n            <Meta label={t(\"day-total-eligible-btcsts\")} text={amountIn} suffix={order?.fromToken?.symbol} disabled={disabled} />\n            <Meta label={t(\"accumulate-mined-btc\")} text={amountOutMin} suffix={order?.toToken?.symbol} disabled={disabled} />\n            {expiry && <Meta label={t(\"day-lwm\")} text={expiry} disabled={disabled} />}\n            <FilledEvents state={state} />\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\nconst FilledEvents = ({ state }: { state: MyLimitOrdersState }) => {\n    const t = useTranslation();\n    const prefix = \"https://etherscan.io/tx/\";\n    return (\n        <View>\n            {state.filledEvents &&\n                state.filledEvents.map((event, i) => {\n                    const hash = event.transactionHash;\n                    const tx = hash.substring(0, 10) + \"...\" + hash.substring(hash.length - 8);\n                    return <Meta key={i} label={t(\"filled-tx-no\") + i} text={tx} url={prefix + hash} />;\n                })}\n        </View>\n    );\n};\n\nconst Controls = ({ state }: { state: MyLimitOrdersState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.selectedOrder]);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            <CancelButton state={state} onError={setError} />\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst CancelButton = ({ state, onError }: { state: MyLimitOrdersState; onError: (e) => void }) => {\n    const t = useTranslation();\n    const onPress = useCallback(() => {\n        onError({});\n        state.onCancelOrder().catch(onError);\n    }, [state.onCancelOrder, onError]);\n    const disabled = !state.selectedOrder || state.selectedOrder.status() !== \"Open\";\n    return <Button title={t(\"cancel-order\")} loading={state.cancellingOrder} onPress={onPress} disabled={disabled} />;\n};\n\nexport default SHTHistoryScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nexport const ITEM_SEPARATOR_HEIGHT = 10;\n\nconst ItemSeparator = () => <View style={{ height: ITEM_SEPARATOR_HEIGHT }} />;\n\nexport default ItemSeparator;\n"],"sourceRoot":""}