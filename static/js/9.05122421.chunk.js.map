{"version":3,"sources":["src/components/Column.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","assets/flags/us.png","assets/flags/uk.png","assets/flags/cn.png","assets/flags/kr.png","src/components/Border.tsx","src/screens/SHTAboutScreen.tsx"],"names":["Column","props","View","style","width","marginTop","noTopMargin","Platform","OS","Spacing","large","normal","SocialIcon","darkMode","useContext","GlobalContext","useColors","background","textLight","light","iconColor","undefined","backgroundColor","borderWidth","borderColor","SocialIcons","onPressTwitter","useLinker","onPressGithub","onPressHome","onPressReddit","onPressDiscord","FlexView","justifyContent","type","onPress","name","raised","reverse","color","reverseColor","containerStyle","flags","us","require","uk","cn","kr","Flag","locale","history","useHistory","location","useLocation","TouchableHighlight","push","pathname","marginHorizontal","Image","source","height","WebFooter","padding","alignItems","Text","note","tiny","Constants","manifest","version","small","module","exports","Border","border","marginBottom","SHTAboutScreen","t","useTranslation","text","title"],"mappings":"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","file":"static/js/9.05122421.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"http://twitter.com/BTCStandardHash\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/Standard-Hashrate-Group\", \"\", \"_blank\");\n    \n    const onPressHome = useLinker(\"https://www.1-b.tc\", \"\", \"_blank\");\n    const onPressReddit = useLinker(\"https://www.reddit.com/user/BTCStandardHashrate\", \"\", \"_blank\");\n\n    const onPressDiscord = useLinker(\"https://discord.gg/standardhashrate\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <SocialIcon type=\"wordpress\" onPress={onPressHome} />\n            <SocialIcon type=\"twitch\" onPress={onPressReddit} />\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React from \"react\";\nimport { Image, TouchableHighlight, View } from \"react-native\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport Constants from \"expo-constants\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport useLinker from \"../../hooks/useLinker\";\nimport Column from \"../Column\";\nimport FlexView from \"../FlexView\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst flags = {\n    us: require(\"../../../assets/flags/us.png\"),\n    uk: require(\"../../../assets/flags/uk.png\"),\n    cn: require(\"../../../assets/flags/cn.png\"),\n    kr: require(\"../../../assets/flags/kr.png\")\n};\n\nconst WebFooter = () => {\n    const onPressAlchemy = useLinker(\n        \"https://dashboard.alchemyapi.io/signup\",\n        \"\",\n        \"_blank\"\n    );\n    return (\n        <Column noTopMargin={true}>\n            <View style={{ width: \"100%\", padding: Spacing.normal, alignItems: \"center\" }}>\n                <SocialIcons />\n                {/* <TouchableHighlight onPress={onPressAlchemy}>\n                    <Image\n                        source={require(\"../../../assets/alchemy.png\")}\n                        style={{ width: 188, height: 40, marginTop: Spacing.tiny }}\n                    />\n                </TouchableHighlight> */}\n                <Text note={true} style={{ marginTop: Spacing.tiny }}>\n                    Built with ❤️ by Standard Hashrate (v{Constants.manifest.version})\n                </Text>\n                <FlexView style={{ marginTop: Spacing.small }}>\n                    <Flag name={\"uk\"} locale={\"en\"} />\n                    <Flag name={\"cn\"} locale={\"zh\"} />\n                    {/* <Flag name={\"kr\"} locale={\"ko\"} /> */}\n                </FlexView>\n            </View>\n        </Column>\n    );\n};\n\nconst Flag = ({ name, locale }) => {\n    const history = useHistory();\n    const location = useLocation();\n    const onPress = () => {\n        history.push(location.pathname + \"?locale=\" + locale);\n    };\n    return (\n        <TouchableHighlight onPress={onPress} style={{ marginHorizontal: 4 }}>\n            <Image source={flags[name]} style={{ width: 30, height: 20 }} />\n        </TouchableHighlight>\n    );\n};\n\nexport default WebFooter;\n","module.exports = __webpack_public_path__ + \"static/media/us.d367121f.png\";","module.exports = __webpack_public_path__ + \"static/media/uk.934852d7.png\";","module.exports = __webpack_public_path__ + \"static/media/cn.baedda5d.png\";","module.exports = __webpack_public_path__ + \"static/media/kr.146730ea.png\";","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = props => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: props.small ? Spacing.tiny : Spacing.small,\n                marginBottom: props.small ? Spacing.tiny : Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport AmountMeta from \"../components/AmountMeta\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\n\nimport WebFooter from \"../components/web/WebFooter\";\n\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport useSwapState, { OrderType, SwapState } from \"../hooks/useSwapState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Screen from \"./Screen\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport FlexView from \"../components/FlexView\";\nimport { Spacing } from \"../constants/dimension\";\n\nconst SHTAboutScreen = () => {\n    const t = useTranslation();\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"https://twitter.com/standardhashrate\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/Standard-Hashrate-Group\", \"\", \"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.gg/standardhashrate\", \"\", \"_blank\");\n    const onPressHome = useLinker(\"https://www.1-b.tc\", \"\", \"_blank\");\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={t(\"about\")} />\n                    <Text light={true} style={{marginBottom:Spacing.large}}>\n                        {t(\"about-desc\")}\n                    </Text>\n\n                    <Button title={t(\"home-page\")} onPress={onPressHome}/>\n                    <Border/>\n                    <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n                        <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n                        <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n                        <SocialIcon type=\"wordpress\" onPress={onPressHome} />\n                        <Icon\n                            type={\"material-community\"}\n                            name={\"discord\"}\n                            raised={true}\n                            reverse={true}\n                            color={background}\n                            reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                            style={{ backgroundColor: background }}\n                            containerStyle={{\n                                borderWidth: 1,\n                                borderColor: darkMode ? \"white\" : textLight\n                            }}\n                            onPress={onPressDiscord}\n                        />\n                    </FlexView>\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n        </Screen>\n    );\n};\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\nexport default SHTAboutScreen;\n"],"sourceRoot":""}